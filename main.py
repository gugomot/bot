import telebot
from telebot import types

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
bot = telebot.TeleBot('7598395534:AAEft4p_E78QFMd7VptKplSabG4VPlgES_g')

# ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã)
REVIEW_CHAT_ID = -4740348042  # –ü—Ä–∏–º–µ—Ä ID —á–∞—Ç–∞ –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤

# –î–∞–Ω–Ω—ã–µ –æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞—Ö
designers = {
    "Gugonot": {
        "chat_id": 1005232367,  # –í–∞—à chat_id –¥–ª—è –¥–∏–∑–∞–π–Ω–µ—Ä–∞
        "portfolio_url": "https://imgur.com/a/O3boemf",
        "prices": {
            "–ü—Ä–µ–≤—å—é": 175,
            "–ê–≤–∞—Ç–∞—Ä–∫–∞": 110,
            "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ": 250
        }
    }
}

user_state = {}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def main(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üõí –ó–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω", "‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
    bot.send_message(
        message.chat.id,
        'üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ –¥–∏–∑–∞–π–Ω–∞ –ø—Ä–µ–≤—å—é, –∞–≤–∞—Ç–∞—Ä–æ–∫ –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–ª—è YouTube –∏ –Ω–µ —Ç–æ–ª—å–∫–æ!',
        reply_markup=markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–∏–∑–∞–π–Ω–∞
@bot.message_handler(func=lambda m: m.text == "üõí –ó–∞–∫–∞–∑–∞—Ç—å –¥–∏–∑–∞–π–Ω")
def select_design_type(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üñº –ü—Ä–µ–≤—å—é", "üë§ –ê–≤–∞—Ç–∞—Ä–∫–∞", "üé® –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ", "üîô –ù–∞–∑–∞–¥")
    bot.send_message(message.chat.id, "üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –¥–∏–∑–∞–π–Ω–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∏–∑–∞–π–Ω–∞
@bot.message_handler(func=lambda m: m.text in ["üñº –ü—Ä–µ–≤—å—é", "üë§ –ê–≤–∞—Ç–∞—Ä–∫–∞", "üé® –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"])
def choose_designer(message):
    design_type_map = {
        "üñº –ü—Ä–µ–≤—å—é": "–ü—Ä–µ–≤—å—é",
        "üë§ –ê–≤–∞—Ç–∞—Ä–∫–∞": "–ê–≤–∞—Ç–∞—Ä–∫–∞",
        "üé® –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ": "–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"
    }
    user_state[message.chat.id] = {"design_type": design_type_map[message.text]}  # –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for name in designers.keys():
        markup.add(name)
    markup.add("üîô –ù–∞–∑–∞–¥")
    bot.send_message(message.chat.id, "üë§ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∑–∞–π–Ω–µ—Ä–∞:", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–∏–∑–∞–π–Ω–µ—Ä–∞
@bot.message_handler(func=lambda m: m.text in designers.keys())
def show_designer_options(message):
    chat_id = message.chat.id

    # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∑–∞–ø–∏—Å—å –≤ user_state
    if chat_id not in user_state:
        bot.send_message(chat_id, "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ —Å –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–∏–∑–∞–π–Ω–∞.")
        return

    designer_name = message.text
    user_state[chat_id]["designer"] = designer_name
    design_type = user_state[chat_id]["design_type"]
    designer = designers[designer_name]
    price = designer['prices'][design_type]

    inline = types.InlineKeyboardMarkup()
    inline.add(
        types.InlineKeyboardButton(text="üìÅ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data=f"portfolio_{designer_name}"),
        types.InlineKeyboardButton(text=f"‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å: {design_type} ({price} –≥—Ä–Ω)", callback_data=f"order_{designer_name}")
    )
    bot.send_message(chat_id, f"üé® –î–∏–∑–∞–π–Ω–µ—Ä: {designer_name}", reply_markup=inline)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ
@bot.callback_query_handler(func=lambda call: call.data.startswith("portfolio_"))
def send_portfolio(call):
    designer_name = call.data.split("_")[1]
    designer = designers[designer_name]
    bot.send_photo(call.message.chat.id, designer['portfolio_url'], caption=f"üñº –ü–æ—Ä—Ç—Ñ–æ–ª–∏–æ –¥–∏–∑–∞–π–Ω–µ—Ä–∞ {designer_name}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ó–∞–∫–∞–∑–∞—Ç—å
@bot.callback_query_handler(func=lambda call: call.data.startswith("order_"))
def handle_order(call):
    chat_id = call.message.chat.id
    designer_name = call.data.split("_")[1]
    design_type = user_state.get(chat_id, {}).get("design_type", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    username = call.from_user.username or "–ë–µ–∑ username"
    tg_link = f"https://t.me/{username}" if username != "–ë–µ–∑ username" else "(–Ω–µ —É–∫–∞–∑–∞–Ω–æ)"

    designer = designers[designer_name]
    price = designer['prices'][design_type]

    bot.send_message(
        designer["chat_id"],
        f"üîî –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n–¢–∏–ø: {design_type}\n–¶–µ–Ω–∞: {price} –≥—Ä–Ω\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n–ü—Ä–æ—Ñ–∏–ª—å: {tg_link}"
    )

    bot.send_message(chat_id, "üéâ –í–∞—à –∑–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–∏–∑–∞–π–Ω–µ—Ä—É! –û–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞
@bot.message_handler(func=lambda m: m.text == "‚≠ê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤")
def ask_for_review(message):
    msg = bot.send_message(message.chat.id, "üìù –ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤ –∏ –º—ã –µ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–¥–∏–º!")
    bot.register_next_step_handler(msg, handle_review)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∑—ã–≤–∞
def handle_review(message):
    username = message.from_user.username or "–ë–µ–∑ username"
    review_text = message.text

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–∑—ã–≤–∞ –≤ –≥—Ä—É–ø–ø—É —Å –æ—Ç–∑—ã–≤–∞–º–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º REVIEW_CHAT_ID
    bot.send_message(REVIEW_CHAT_ID, f"üì¢ –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –æ—Ç @{username}:\n\n{review_text}")
    bot.send_message(message.chat.id, "üôè –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à –æ—Ç–∑—ã–≤!")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤
@bot.message_handler(func=lambda m: m.text == "üëÄ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã")
def view_reviews(message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É —Å –æ—Ç–∑—ã–≤–∞–º–∏
    bot.send_message(
        message.chat.id,
        "üëÄ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤: [–°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É —Å –æ—Ç–∑—ã–≤–∞–º–∏](https://t.me/+WDuu68VfwBg2NmMy)",
        parse_mode="Markdown"
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ù–∞–∑–∞–¥
@bot.message_handler(func=lambda m: m.text == "üîô –ù–∞–∑–∞–¥")
def go_back(message):
    main(message)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)